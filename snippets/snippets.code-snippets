{
    "Parent Page Template": {
        "prefix": "ppt",
        "scope": "javascript, javascriptreact",
        "description": "Creates a parent page component.",
        "body": [
            "import React, { useState } from \"react\";\n",
            "\r\nexport default function ${fileName}Mgt(){",
            "\tconst [currentPage, setCurrentPage] = useState(1);",
            "\tconst [isLoading, setIsLoading] = useState(false);",
            "\tconst [key, setKey] = useState(Math.random());",
            "\tconst [slideNo, setSlideNo] = useState(0);",
            "\tconst colors = [",
            "\t\t\"primary\",",
            "\t\t\"default\",",
            "\t\t\"default\",",
            "\t\t\"default\",",
            "\t\t\"default\",",
            "\t\t\"default\",",
            "\t\t\"default\",",
            "\t\t\"default\",",
            "\t\t\"#b5004f\",",
            "\t];",
            "\tfunction showLoadingIndicator(show) {",
            "\t\tscrollToTopPage();",
            "\t\tsetIsLoading(show);",
            "\t}",
            "\tfunction scrollToTopPage() {",
            "\t\tdocument",
            "\t\t\t.getElementById(\"${fileName}-mgt\")",
            "\t\t\t.scrollIntoView({ behavior: \"smooth\", block: \"start\" });",
            "\t}",
            "\tfunction skipToPage(pageNo, slideNo) {",
            "\t\tlet cPage = currentPage;",
            "\t\tconst prevPage = parseInt(cPage) - 1;",
            "\t\tconst jumpIndex = pageNo - 1;",
            "\n\t\tcolors[prevPage] = \"default\";",
            "\t\tcolors[jumpIndex] = \"primary\";",
            "\n\t\tsetCurrentPage(pageNo);",
            "\t\tsetKey(Math.random());",
            "\t\tsetSlideNo(slideNo);",
            " \t}\n",
            "\n\t// BreadCrumps",
            "\tconst BreadCrumpsData = [",
            "\t\t<div>",
            "\t\t\t<TrackerIcon ",
            "\t\t\t\tstyle={{ marginRight: \"5px\", width: 20, height: 20, marginTop: -3 }}",
            "\t\t\t/>",
            "\t\t\t${toolbarTitle}",
            "\t\t</div>,",
            "\t];\n",
            "\n\t// ToolbarData",
            "\tconst ToolbarData = [",
            "\t\t{",
            "\t\t\tTitle: (",
            "\t\t\t\t<div ",
            "\t\t\t\t\tstyle={{ width: \"100%\", height: \"100%\" }}",
            "\t\t\t\t\tonClick={() => skipToPage(1, 0)}",
            "\t\t\t\t>",
            "\t\t\t\t\t${toolbarTitle}",
            "\t\t\t\t</div>",
            "\t\t\t),",
            "\t\t\tContent: [",
            "\t\t\t\t<Button",
            "\t\t\t\t\tsimple",
            "\t\t\t\t\tcolor=\"info\"",
            "\t\t\t\t\tonClick={() => skipToPage(1, 0)}",
            "\t\t\t\t\tfullWidth={true}",
            "\t\t\t\t>",
            "\t\t\t\t\t${childPage}",
            "\t\t\t\t</Button>,",
            "\t\t\t],",
            "\t\t},",
            "\t];\n",
            "\n\treturn (",
            "\t\t<div id=\"${fileName}-mgt\">",
            "\t\t\t<GridContainer justify=\"center\">",
            "\t\t\t\t<PageLoadAnimation isLoading={isLoading} />",
            "\t\t\t\t<GridItem xs={12} sm={12} md={12}>",
            "\t\t\t\t\t<Breadcrumbs breadCrumpsData={BreadCrumpsData} />",
            "\t\t\t\t\t<CustomToolbar",
            "\t\t\t\t\t\tproceed={currentPage}",
            "\t\t\t\t\t\tslideNo={slideNo}",
            "\t\t\t\t\t\ttoolbarData={ToolbarData}",
            "\t\t\t\t\t/>",
            "\t\t\t\t</GridItem>",
            "\t\t\t\t<GridContainer justify=\"center\">",
            "\t\t\t\t\t<div>",
            "\t\t\t\t\t\t<PageLoadAnimation isLoading={isLoading} />",
            "\t\t\t\t\t</div>",
            "\t\t\t\t</GridContainer>",
            "\t\t\t\t<GridItem xs={12} sm={12} md={12}>",
            "\t\t\t\t\t{currentPage === 1 && (",
            "\t\t\t\t\t\t<h1>Kasasira Joshua is awesome</h1>",
            "\t\t\t\t\t)}",
            "\t\t\t\t</GridItem>",
            "\t\t\t\t</GridContainer>",
            "\t\t</div>",
            "\t);",
            "};"
        ]
    },
    "Child Page Template": {
        "prefix": "cpt",
        "scope": "javascript, javascriptreact",
        "description": "Creates a child page component.",
        "body": [
            "import React, { useState } from \"react\";\n",
            "import Alert from \"@material-ui/lab/Alert\";",
            "import WorkIcon from \"@material-ui/icons/Domain\";",
            "import FilterList from \"@material-ui/icons/FilterList\";",
            "\r\nexport default function ${childPageName}(){",
            "\n\treturn (",
            "\t\t<GridContainer justify=\"center\">",
            "\t\t\t<GridItem xs={12} sm={12} md={12}>",
            "\t\t\t\t<Card>",
            "\t\t\t\t\t<CardHeader",
            "\t\t\t\t\t\ticon={<WorkIcon fontSize=\"large\" style={{ color: \"white\" }} />}",
            "\t\t\t\t\t\ttitle={${title}}",
            "\t\t\t\t\t/>\r\n",
            "\t\t\t\t\t<Alert icon={<FilterList fontSize=\"inherit\" />} severity=\"warning\">",
            "\t\t\t\t\t\t${subtitle}",
            "\t\t\t\t\t</Alert>\r\n",
            "\t\t\t\t\t<CardBody>",
            "\t\t\t\t\t\t${0}",
            "\t\t\t\t\t</CardBody>",
            "\t\t\t\t</Card>",
            "\t\t\t</GridItem>",
            "\t\t</GridContainer>",
            "\t);",
            "};"
        ]
    },
    "Child Page Template With Table": {
        "prefix": "cptt",
        "scope": "javascript, javascriptreact",
        "description": "Creates a child page component with table.",
        "body": [
            "import React, { useState } from \"react\";\n",
            "import Alert from \"@material-ui/lab/Alert\";",
            "import WorkIcon from \"@material-ui/icons/Domain\";",
            "import FilterList from \"@material-ui/icons/FilterList\";",
            "\r\nexport default function ${childPageName}(){",
            "\tconst defaultExpandedGrouping = [];",
            "\tconst defaultHiddenColumnNames = [];",
            "\tconst grouping = [{ columnName: \"${column1}\" }];",
            "\tconst totalSummaryItems = [{ columnName: \"${column1}\", type: \"count\" }];",
            "\tconst columns = [",
            "\t\t{ name: \"${column1}\", title: \"${column1}\" },",
            "\t\t{ name: \"${column2}\", title: \"${column2}\" },",
            "\t\t{ name: \"${column3}\", title: \"${column3}\" },",
            "\t\t{ name: \"actions\", title: \"Actions\" },",
            "\t];",
            "\tconst exportColumns = [",
            "\t\t{ name: \"${column1}\", title: \"${column1}\" },",
            "\t\t{ name: \"${column2}\", title: \"${column2}\" },",
            "\t\t{ name: \"${column3}\", title: \"${column3}\" },",
            "\t];\r\n",
            "\tlet tableData = [], exportData = [], defaultExpanded = [];\r\n\n",
            "\tdefaultExpanded = [...new Set(defaultExpanded)];\r\n",
            "\n\treturn (",
            "\t\t<GridContainer justify=\"center\">",
            "\t\t\t<GridItem xs={12} sm={12} md={12}>",
            "\t\t\t\t<Card>",
            "\t\t\t\t\t<CardHeader",
            "\t\t\t\t\t\ticon={<WorkIcon fontSize=\"large\" style={{ color: \"white\" }} />}",
            "\t\t\t\t\t\ttitle={${title}}",
            "\t\t\t\t\t/>\r\n",
            "\t\t\t\t\t<Alert icon={<FilterList fontSize=\"inherit\" />} severity=\"warning\">",
            "\t\t\t\t\t\t${subtitle}",
            "\t\t\t\t\t</Alert>\r\n",
            "\t\t\t\t\t<CardBody>",
            "\t\t\t\t\t\t{tableData.length > 0 ? (",
            "\t\t\t\t\t\t\t<TableExport",
            "\t\t\t\t\t\t\t\tkey={tableData}",
            "\t\t\t\t\t\t\t\trows={tableData}",
            "\t\t\t\t\t\t\t\tcolumns={columns}",
            "\t\t\t\t\t\t\t\tgrouping={grouping}",
            "\t\t\t\t\t\t\t\texportRow={exportData}",
            "\t\t\t\t\t\t\t\texportColumns={exportColumns}",
            "\t\t\t\t\t\t\t\ttotalSummaryItems={totalSummaryItems}",
            "\t\t\t\t\t\t\t\tdefaultExpandedGroups={defaultExpanded}",
            "\t\t\t\t\t\t\t\tdefaultHiddenColumnNames={defaultHiddenColumnNames}",
            "\t\t\t\t\t\t\t\tfileName={\"${title}\"}",
            "\t\t\t\t\t\t\t/>",
            "\t\t\t\t\t\t) : (",
            "\t\t\t\t\t\t\t<NoDatacard title=\"No data found.\" />",
            "\t\t\t\t\t\t)}",
            "\t\t\t\t\t</CardBody>",
            "\t\t\t\t</Card>",
            "\t\t\t</GridItem>",
            "\t\t</GridContainer>",
            "\t);",
            "};"
        ]
    }
}